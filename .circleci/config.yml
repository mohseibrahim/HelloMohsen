# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
commands:
  demo1_command:
    description: "demo1_command"
    parameters:
      toto:
          type: string
          default: "hamada"
    steps:
      - run: echo << parameters.toto >>


  print_pipeline_number:
    description: "print pipeline number"
    steps:
      - run: echo$CIRCLE_WORFLOW_ID



orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

jobs:
 print_hello:
  docker:
   - image: circleci/node:13.8.0
  steps:
   - checkout
   - run :
      name : print_hello
      command :
       echo "hello"

 print_world:
  docker: 
   - image : circleci/node:13.8.0
  steps:
  - checkout
  - run :
     name : print_world 
     command :
       echo "world"   


 echo_env_var:
  docker:
   - image : circleci/node:13.8.0
  steps:
  - checkout 
  - run :
     name : echo_env_var
     command :
       echo $Mohsen_ENV_VAR

 save_hello_world_output:
  docker:
   - image : circleci/node:13.8.0
  steps:
  - checkout 
  - run :
     name : save_hello_world_output
     command :
       echo "hello world mohsen" > output.txt
  - persist_to_workspace:
      root: .
      paths:
        - output.txt    


 print_output_file:
  docker:
   - image : circleci/node:13.8.0
  steps:
  - checkout
  - attach_workspace:
      at: .
    
  - run :
     name : print_output_file
     command :
       cat output.txt

 demo_command:
  docker:
   - image: circleci/node:13.8.0
  steps:
    - checkout 
    - demo1_command:
        toto: "hamada"

 demo_command_print_pipeline_number :
  docker:
   - image: circleci/node:13.8.0
  steps :
   - checkout 
   - print_pipeline_number
              
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  default:
    # Run the welcome/run job in its own container
    jobs:
      - print_hello 
      - print_world :
         requires: 
          - print_hello
      - echo_env_var
      - save_hello_world_output
      - print_output_file :
         requires:
          - save_hello_world_output
      - demo_command
      - demo_command_print_pipeline_number
